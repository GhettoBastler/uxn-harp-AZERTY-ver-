|00 @System     &vector $2 &wst      $1 &rst    $1 &eaddr  $2 &ecode  $1 &pad     $1 &r       $2 &g      $2 &b     $2 &debug  $1 &halt $1
|10 @Console    &vector $2 &read     $1 &pad    $5 &write  $1 &error  $1
|20 @Screen     &vector $2 &width    $2 &height $2 &auto   $1 &pad    $1 &x       $2 &y       $2 &addr   $2 &pixel $1 &sprite $1
|30 @Audio0     &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1
|40 @Audio1     &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1
|50 @Audio2     &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1
|60 @Audio3     &vector $2 &position $2 &output $1 &pad    $3 &adsr   $2 &length  $2 &addr    $2 &volume $1 &pitch $1
|80 @Controller &vector $2 &button   $1 &key    $1 &func   $1
|90 @Mouse      &vector $2 &x        $2 &y      $2 &state  $1 &pad    $3 &scrollx $2 &scrolly $2
|a0 @File0      &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name    $2 &length  $2 &read   $2 &write $2
|b0 @File1      &vector $2 &success  $2 &stat   $2 &delete $1 &append $1 &name    $2 &length  $2 &read   $2 &write $2
|c0 @DateTime   &year   $2 &month    $1 &day    $1 &hour   $1 &minute $1 &second  $1 &dotw    $1 &doty   $2 &isdst $1

%Ext { #00 SWP } ( Extend byte to short )
%Mod { DIVk MUL SUB }
%Mod2 { DIV2k MUL2 SUB2 }
%Dbg { #01 .System/debug DEO }
%Ssx { .Screen/x DEO2 }
%Ssy { .Screen/y DEO2 }
%Ssa { .Screen/addr DEO2 }
%Spr { .Screen/sprite DEO }
%Sprr { .Screen/sprite DEOk DEO }
%Sprrr { .Screen/sprite DEOk DEOk DEO }
%Aut0 { #00 .Screen/auto DEO }
%Aut0ay { #06 .Screen/auto DEO }
%Aut1ay { #16 .Screen/auto DEO }
%Aut2ay { #26 .Screen/auto DEO }
%Aut1y { #12 .Screen/auto DEO }

( variables )

|0000
@bass
	&which $2 ( A=0, Bb=1, B=2... none=8000 )
	&time $2  ( Timer, used for slap + label color update )
@chord
	&which $2 ( Current chord index, none=800 )
	&time $2  ( Timer, used for arpeggio + volume + label color update )

@on $1 ( for drawing labels )

( program )

|0100 ( -> )
	#8000 .bass/which STZ2
	#8000 .chord/which STZ2

	#5f4f .System/r DEO2
	#af4e .System/g DEO2
	#9f42 .System/b DEO2
	#00f8 .Screen/width DEO2
	#0068 .Screen/height DEO2

	( Bass channel )
	#0121 .Audio0/adsr DEO2
	#0020 .Audio0/length DEO2
	;tri-wave .Audio0/addr DEO2
	#ff .Audio0/volume DEO

	( Chord channel left )
	#0010 .Audio1/adsr DEO2
	#0020 .Audio1/length DEO2
	;tri-wave .Audio1/addr DEO2
	#88 .Audio1/volume DEO

	( Chord channel right )
	#0010 .Audio2/adsr DEO2
	#0020 .Audio2/length DEO2
	;tri-wave .Audio2/addr DEO2
	#88 .Audio2/volume DEO

	( Initial draw of chord buttons: )
	#0000
	&loop-chord
	DUP2 #01 ;draw-chord-button JSR2
	INC2
	DUP2 #000f LTH2 ,&loop-chord JCN
	POP2

	( Initial draw of bass buttons: )
	#0000
	&loop-note
	DUP2 #01 ;draw-bass-button JSR2
	INC2
	DUP2 #000c LTH2 ,&loop-note JCN
	POP2

	;on-controller .Controller/vector DEO2
	;on-screen .Screen/vector DEO2
BRK

@bass-keys  "vqxdrawcfzse
@chord-keys "yuiophjkl;nm,./

@on-controller ( -> )
	( Loop over bass note buttons: )
	#0000
	&bass-loop
	DUP2 ;bass-keys ADD2 LDA
	.Controller/key DEI NEQ ,&no-bass JCN
	.bass/which LDZ2 #00 .on STZ #01 ;draw-bass-button JSR2
	DUP2 .bass/which STZ2
	;pluck-bass JSR2
	&no-bass
	INC2 DUP2 #000c LTH2 ,&bass-loop JCN
	POP2

	( Handle space bar = fifth: )
	.Controller/key DEI #20 NEQ ,&no-fifth JCN
	;pluck-bass JSR2
	&no-fifth

	( Loop over chord buttons: )
	#0000
	&chord-loop
	DUP2 ;chord-keys ADD2 LDA
	.Controller/key DEI NEQ ,&no-chord JCN
	.chord/which LDZ2 #00 .on STZ #01 ;draw-chord-button JSR2
	DUP2 .chord/which STZ2 #0010 .chord/time STZ2
	DUP2 #01 .on STZ #02 ;draw-chord-button JSR2
	&no-chord
	INC2 DUP2 #000f LTH2 ,&chord-loop JCN
	POP2
BRK

@pluck-bass ( -> )
	( Get bass semitones )
	.bass/which LDZ2
	DUP2 #01 .on STZ #02 ;draw-bass-button JSR2
	NIP

	( If spacebar was pressed, lower by a fifth: )
	.Controller/key DEI #20 EQU
		#07 
			( Subtract 1 (making a tritone) if chords[current][0] == 6 or 8. )
			.chord/which LDZ2 #30 SFT ;chords ADD2 LDA
			#06 EQUk ROT ROT INC INC EQU EOR SUB
		MUL ADD

	( Wrap to an octave )
	INC INC #0c Mod #37 ADD
	.Audio0/pitch DEO

	( Set a timer: when time=0e, drop bass pitch by an octave. )
	( When time=0a redraw with labelcolor=1 )
	#0010 .bass/time STZ2
JMP2r

@on-screen ( -> )
	( Play chord arpeggio: )
	.chord/time LDZ2
	DUP2 #0000 EQU2 ,&chord-silent JCN
		DUP2 #000a NEQ2 ,&no-unflash JCN
			.chord/which LDZ2 #01 .on STZ #01 ;draw-chord-button JSR2
		&no-unflash
		DUP2 #0001 AND2 NIP ,&no-arp JCN
			DUP2 #0007 AND2 #01 SFT2
			.chord/which LDZ2 #30 SFT2 ADD2
			DUP2    ;chords ADD2 LDA Ext .bass/which LDZ2 ADD2 NIP #0c Mod #45 ADD .Audio1/pitch DEO
			#02 EOR ;chords ADD2 LDA Ext .bass/which LDZ2 ADD2 NIP #0c Mod #45 ADD .Audio2/pitch DEO
		&no-arp
		DUP2 NIP #01 SUB #40 SFT .Audio1/volume DEO
		DUP2 NIP #01 SUB #01 MUL .Audio2/volume DEO
		DUP2 #0001 SUB2 .chord/time STZ2
	&chord-silent
	POP2

	.bass/time LDZ2
	DUP2 #0000 EQU2 ,&bass-silent JCN
		#0001 SUB2 DUP2 .bass/time STZ2
		DUP2 #000e NEQ2 ,&no-slap-effect JCN
			.Audio0/pitch DEI #0c SUB .Audio0/pitch DEO
		&no-slap-effect
		DUP2 #000a NEQ2 ,&no-unflash-bass JCN
			.bass/which LDZ2 #01 .on STZ #01 ;draw-bass-button JSR2
		&no-unflash-bass
	&bass-silent
	POP2
BRK

@draw-chord-button ( num* labelcolor -> )
	STH
	( Redraw the button for the num-th chord. )
	( x = 0x80 + num%5 * 0x18 )
	DUP2 #0005 Mod2 #0018 MUL2 #0080 ADD2  ( num* x* )
	( y = 0x08 + num/5 * 0x18 )
	OVR2 #0005 DIV2 #0018 MUL2 #0008 ADD2  ( num* x* y* )

	OVR2 OVR2 ;draw-border JSR2
	Ssy SWP2         ( x* num* )
	#30 SFT2         ( x* 8num* )
	Aut0ay           ( x* 8num* )
	;chords/l ADD2   ( x* &lsprt )
	INC2k INC2 LDA2  ( x* &lsprt rsprt )

	DUP2 #0000 EQU2 ,&no-right JCN
		( Draw the right 1x2 sprite at [x+8,y]. )
		Ssa                  ( x* &lsprt )
		OVR2 #0008 ADD2 Ssx  ( x* &lsprt )
		STHrk Sprr           ( x* &lsprt )
		.Screen/y DEI2 #0010 SUB2 Ssy
		,&draw-left JMP
	&no-right
		( If no right, draw left centered, at [x+4,y] )
		POP2 SWP2 #0004 ADD2 SWP2
	&draw-left
	LDA2 Ssa
	Ssx
	STHr Sprr
JMP2r

@draw-bass-button ( num* labelcol -> )
	STH
	DUP2 #8000 NEQ2 ,&not-none JCN STHr POP POP2 JMP2r &not-none
	( Draw the note button for semitone num )
	( x = 0x08 + 0x18 * [n+3&3] )
	( y = 0x08 + 0x18 * [[n+11^3]%3]... don't ask )
	DUP2 #0003 ADD2 #0003 AND2 #0018 MUL2 #0008 ADD2
	OVR2 #000b ADD2 #0003 EOR2 #0003 Mod2 #0018 MUL2 #0008 ADD2
	( num* x* y* )

	OVR2 OVR2 ;draw-border JSR2 ( num* x* y* )

	( Draw the note name, shifted 1px right if accidental = blank: )
	ROT2 #20 SFT2 ;note-table ADD2 ( x* y* &name )
	LDA2k Ssa  ( x* y* &name )
	INC2 INC2 LDA2  ( x* y* acc )
	ROT2k SWP2  ( x* y* acc y* x* acc )
	;s1x1_blank EQU2 Ext  ( x* y* acc y* x* acc=blank )
	ADD2 Ssx Ssy  ( x* y* acc )
	Aut1ay STHrk Sprr

	( Draw the accidental: )
	Ssa Ssy
	#0008 ADD2 Ssx
	Aut0 STHr #40 ORA Spr
JMP2r

@draw-border ( x* y* -> )
	#0002 SUB2 Ssy
	#0002 SUB2 Ssx
	;s3x3_border Ssa
	Aut2ay
	#02 .on LDZ SUB Sprrr
JMP2r

@chords
	( notes         left sprt  right sprt )
	07 0b 0e 10  &l :s1x2_maj7 :s1x2_9
	07 0a 0e 0f     :s1x2_m    :s1x2_9
	07 0a 0c 11     :s1x2_7    :s1x2_s
	07 0a 0d 10     :s1x2_7    :s1x2_flat9
	0a 0e 11 15     :s1x2_13   :s1x2_s

	07 0b 0c 10     :s1x2_maj7 0000
	07 0a 0c 0f     :s1x2_m    :s1x2_7
	07 0a 0c 10     :s1x2_7    0000
	08 0a 0c 10     :s1x2_7    :s1x2_sharp5
	0a 0e 10 15     :s1x2_13   0000

	07 09 0c 10     :s1x2_6    0000
	07 09 0c 0f     :s1x2_m    :s1x2_6
	06 0a 0c 0f     :s1x2_sdim :s1x2_7
	06 09 0c 0f     :s1x2_dim  :s1x2_7
	09 0e 0c 12     :s1x2_iil  :s1x2_iir

@note-table
	:s2x2_note/a  :s1x1_blank
	:s2x2_note/b  :s1x1_flat
	:s2x2_note/b  :s1x1_blank
	:s2x2_note/c  :s1x1_blank
	:s2x2_note/d  :s1x1_flat
	:s2x2_note/d  :s1x1_blank
	:s2x2_note/e  :s1x1_flat
	:s2x2_note/e  :s1x1_blank
	:s2x2_note/f  :s1x1_blank
	:s2x2_note/f  :s1x1_sharp
	:s2x2_note/g  :s1x1_blank
	:s2x2_note/a  :s1x1_flat

@s2x2_note
&a
	0000 0203 0705 0908
	0000 0000 0080 80c0
	1010 3f20 4040 e000
	c060 e030 3018 3c00
&b
	0000 ff61 6060 6061
	0000 0080 c0c0 8000
	7f61 6060 6061 ff00
	0080 c0c0 c080 0000
&c
	0000 1f30 60c0 c0c0
	0000 e0e0 6060 0000
	c0c0 c0c0 6030 1f00
	0000 0000 60c0 8000
&d
	0000 ff61 6060 6060
	0000 0080 c060 6060
	6060 6060 6061 ff00
	6060 6060 c080 0000
&e
	0000 ff60 6060 6061
	0000 e060 0000 0000
	7f61 6060 6060 ff00
	0000 0000 0060 e000
&f
	0000 ff60 6060 6061
	0000 e060 0000 0000
	7f61 6060 6060 f000
	0000 0000 0000 0000
&g
	0000 1f30 60c0 c0c0
	0000 e0e0 6060 0000
	c0c1 c0c0 6030 1f00
	00f0 6060 60e0 6000
@s1x1_blank
	0000 0000 0000 0000
@s1x1_flat
	0808 0e0a 0a0c 0800
@s1x1_sharp
	0a1f 0a0a 1f0a 0000
@s1x2_7
	0000 0000 7e46 060c
	0c18 1830 3000 0000
@s1x2_13
	0000 0000 dfc2 c6cc
	dec3 c3c6 dc00 0000
@s1x2_sharp5
	0057 f456 51f1 5600
	0000 0000 0000 0000
@s1x2_flat9
	0046 4575 5361 4600
	0000 0000 0000 0000
@s1x2_maj7
	0000 0000 1818 3c3c
	6666 c3c3 ff00 0000
@s1x2_9
	0000 0000 3c66 6666
	3e06 060c 7800 0000
@s1x2_m
	0000 0000 0000 00b6
	dbdb dbdb db00 0000
@s1x2_sdim
	0000 0003 1e37 3f3b
	1e30 0000 0000 0000
@s1x2_dim
	0000 0000 1e33 3333
	1e00 0000 0000 0000
@s1x2_6
	0000 0000 1e30 6060
	7c66 6666 3c00 0000
@s1x2_s
	0000 0000 0000 3e62
	603c 0646 7c00 0000
@s1x2_iil
	0000 0000 7f33 3333
	3333 3333 7f00 0000
@s1x2_iir
	0000 0006 860c 0c0c
	1818 1830 b030 0000
@s3x3_border
	3f40 8080 8080 8080
	ff00 0000 0000 0000
	c020 1010 1010 1010
	8080 8080 8080 8080
	0000 0000 0000 0000
	1010 1010 1010 1010
	8080 403f 0000 0000
	0000 00ff 0000 0000
	1010 20c0 0000 0000

@saw-wave
	80 88 90 98 a0 a8 b0 b8 c0 c8 d0 d8 e0 e8 f0 f8
	00 08 10 18 20 28 30 38 40 48 50 58 60 68 70 78
@tri-wave
	80 90 a0 b0 c0 d0 e0 f0 ff f0 e0 d0 c0 b0 a0 90
	80 70 60 50 40 30 20 10 00 10 20 30 40 50 60 70
